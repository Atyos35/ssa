# This file is the entry point to configure your own services.
# Files in the packages/ directory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Repositories personnalis√©s
    App\Infrastructure\Persistence\Repository\AgentRepository:
        tags: ['doctrine.repository_service']

    App\Infrastructure\Persistence\Repository\MissionRepository:
        tags: ['doctrine.repository_service']

    App\Infrastructure\Persistence\Repository\CountryRepository:
        tags: ['doctrine.repository_service']

    App\Infrastructure\Persistence\Repository\UserRepository:
        tags: ['doctrine.repository_service']

    App\Infrastructure\Persistence\Repository\MessageRepository:
        tags: ['doctrine.repository_service']

    App\Application\Security\Processor\AgentPasswordHashProcessor:
        arguments:
            $em: '@doctrine.orm.entity_manager'
            $passwordHasher: '@security.user_password_hasher'
            $emailVerificationService: '@App\Domain\Service\EmailVerificationService'
        tags: [ 'api_platform.state_processor' ]

    App\EventListener\MissionEventListener:
        tags:
            - { name: 'doctrine.event_listener', event: 'postPersist' }
            - { name: 'doctrine.event_listener', event: 'preUpdate' }
            - { name: 'doctrine.event_listener', event: 'postUpdate' }

    # CQS Bus Configuration
    App\Application\Bus\CommandBusInterface:
        alias: App\Application\Bus\SimpleCommandBus

    App\Application\Bus\QueryBusInterface:
        alias: App\Application\Bus\SimpleQueryBus
